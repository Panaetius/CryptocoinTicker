<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#+

  void GenerateAPI(string fromCurrency, string toCurrency){
    #>
	[Export(typeof(ITickerApi))]
    [ExportMetadata("Exchange", "BTCe")]
    [ExportMetadata("Pair", "<#=fromCurrency.ToUpper() #>/<#=toCurrency.ToUpper() #>")]
    public class BTCe<#=fromCurrency #><#=toCurrency #>API : BTCeAPI, ITickerApi
    {
        public async Task<IEnumerable<Trade>> GetTrades()
        {
            return await Task.Run(() => this.GetTrades("<#=fromCurrency.ToLower() #>_<#=toCurrency.ToLower() #>"));
        }

        public async Task<Depth> GetDepth()
        {
            return await Task.Run(() => this.GetDepth("<#=fromCurrency.ToLower() #>_<#=toCurrency.ToLower() #>"));
        }

		public override long Buy(decimal price, decimal amount)
        {
            return MakeOrder("buy", amount, price, "<#=fromCurrency.ToLower() #>", "<#=toCurrency.ToLower() #>");
        }

        public override long Sell(decimal price, decimal amount)
        {
            return MakeOrder("sell", amount, price, "<#=fromCurrency.ToLower() #>", "<#=toCurrency.ToLower() #>");
        }
    }
<#+
  }

  
#>